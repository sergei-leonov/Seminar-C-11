# Даны два неупорядоченных набора целых чисел (может быть, с
# повторениями). Выдать без повторений в порядке возрастания все те числа, которые
# встречаются в обоих наборах.
# Пользователь вводит 2 числа. n - кол-во элементов первого множества. m - кол-во
# элементов второго множества. Затем пользователь вводит сами элементы множеств.

"""
n = int(input())
import random
random_numbers = set()
for _ in range(n):
    random_number = random.randint(1, 30)
    random_numbers.add(random_number)
    s = random_numbers

m = int(input())
print(s)

import random
random_numbers = set()
for _ in range(m):
    random_number = random.randint(1, 30)
    random_numbers.add(random_number)
    d = random_numbers
print(d)
t = s.intersection(d)

sorted_list = sorted(t)  # Сортировка элементов множества

for num in sorted_list:
    print(num, end=' ')  # Вывод элементов в порядке возрастания
"""

# В фермерском хозяйстве в Карелии выращивают чернику. Она растет на
# круглой грядке, причем кусты высажены только по окружности. Таким образом, у
# каждого куста есть ровно два соседних. Всего на грядке растет N кустов.
# Эти кусты обладают разной урожайностью, поэтому ко времени сбора на них
# выросло различное число ягод – на i-ом кусте выросло ai
#  ягод.
# В этом фермерском хозяйстве внедрена система автоматического сбора черники.
# Эта система состоит из управляющего модуля и нескольких собирающих модулей.
# Собирающий модуль за один заход, находясь непосредственно перед некоторым
# кустом, собирает ягоды с этого куста и с двух соседних с ним.
# Напишите программу для нахождения максимального числа ягод, которое может
# собрать за один заход собирающий модуль, находясь перед некоторым кустом
# заданной во входном файле грядки.

"""
# def max_beris (N, R):
a = int(input())
r = []
for i in range(1, a + 1):
    r.append(i)
arr_count = list()
for i in range(len(r)):
    arr_count.append(r[i-2] + r[i-1] + r[i])

print(max(arr_count))

"""