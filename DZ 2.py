# На столе лежат n монеток. Некоторые из них лежат вверх
# решкой, а некоторые – гербом. Определите минимальное число
# монеток, которые нужно перевернуть, чтобы все монетки были
# повернуты вверх одной и той же стороной. Выведите минимальное
# количество монет, которые нужно перевернуть.
# 5 -> 1 0 1 1 0
# 2
"""
n = int(input())
reh = 0
ger = 0
for i in range(n):
    n = int(input())
    if n == 0:
        reh += 1
    if n == 1:
        gerb += 1
if reh < gerb:
    print(reh)
else:
    print(ger)
"""

# Петя и Катя – брат и сестра. Петя – студент, а Катя –
# школьница. Петя помогает Кате по математике. Он задумывает два
# натуральных числа X и Y (X,Y≤1000), а Катя должна их отгадать. Для
# этого Петя делает две подсказки. Он называет сумму этих чисел S и их
# произведение P. Помогите Кате отгадать задуманные Петей числа.
"""
a = int(input())
b = int(input())
c = (b // 10 + 2)
c1 = b // c
print(c, c1)
"""

# Требуется вывести все целые степени двойки (т.е. числа
# вида 2k), не превосходящие числа N.
"""
n = int(input())
first = 0
second = 0
while first < n:
    first += second
    second = first
    first += 1
    if first < n:
        print(first)
"""

# Посчитать сумму цифр любого целого или вещественного числа. Через строку решать нельзя.
"""
n = float(input())
sum = 0
f = abs(n) * 10
t = int(f)
while t != 0:
    s = t % 10
    sum += s
    t //= 10
print(sum)
"""


# Валентина прогуляла лекцию по математике.
# Преподаватель решил подшутить над нерадивой студенткой и
# попросил ее на практическом занятии перечислить все
# положительные делители некоторых целых чисел.
# Для несложных примеров студентка быстро нашла решения
# (для числа 6 это: 1, 2, 3, 6; а для числа 16 это: 1, 2, 4, 8, 16), но этим все не закончилось.
# На домашнее задание ей дали варианты посложнее: 23436, 190187200, 380457890232.
#
# Решить такое вручную, как вы понимаете, практически нереально.
# Вот Валентина и обратилась к вам за помощью.
# Помогите ей (при помощи функции all_divisors(number), которую напишете сами).
# Постарайтесь найти самое оптимальное решение.
# Результат представьте в виде списка (не забудьте отсортировать по возрастанию).

"""
def all_divisors(n):
    divisors = []
    for i in range(1, n + 1):
        if n % i == 0:
            divisors.append(i)

    return divisors
result = all_divisors(6)
print(result)
"""